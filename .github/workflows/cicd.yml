name: CICD Pipeline

on:
  push:
    branches:
      - main # Trigger deploy on pushes to the main branch

jobs:
  build:
    runs-on: ubuntu-latest
    environment: react-quiz-env

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t visheshtomarr/react-quiz-app .

      - name: Push Docker Image to Docker Hub
        run: docker push visheshtomarr/react-quiz-app:latest

  deploy:
    needs: build
    # Will be executed on a runner on github
    runs-on: aws-ec2
    environment: react-quiz-env

    steps:
      - name: Pull image from Docker Hub
        run: docker pull visheshtomarr/react-quiz-app:latest

      - name: Delete existing container
        run: docker rm -f reactQuizApp

      - name: Run Docker container
        run: docker run -d -p 3000:80 --name reactQuizApp visheshtomarr/react-quiz-app

      # - name: Set up Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: "16"

      # - name: Install dependencies
      #   run: npm install

      # - name: Build React app
      #   run: npm run build

      # - name: Copy build files to EC2
      #   env:
      #     PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      #     EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP_ADDRESS }}
      #   run: |
      #     # Write the private key to a file
      #     echo "$PRIVATE_KEY" > private_key.pem
      #     chmod 600 private_key.pem

      #     # Rsync to copy build files to EC2 instance
      #     rsync -avz -e "ssh -i private_key.pem -o StrictHostKeyChecking=no" ./build/ ec2-user@$EC2_PUBLIC_IP:/var/www/react-quiz/

      # - name: Reload Nginx
      #   env:
      #     PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      #     EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP_ADDRESS }}
      #   run: |
      #     # Write the private key to a file
      #     echo "$PRIVATE_KEY" > private_key.pem
      #     chmod 600 private_key.pem

      #     # Reload Nginx on the EC2 instance
      #     ssh -i private_key.pem -o StrictHostKeyChecking=no ec2-user@$EC2_PUBLIC_IP 'sudo systemctl reload nginx'
